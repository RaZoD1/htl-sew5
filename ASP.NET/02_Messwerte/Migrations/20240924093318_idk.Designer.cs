// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _02_Messwerte.Data;

#nullable disable

namespace _02_Messwerte.Migrations
{
    [DbContext(typeof(MessDataContext))]
    [Migration("20240924093318_idk")]
    partial class idk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("_02_Messwerte.Model.MessStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BetriebsDauer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MessStationen");
                });

            modelBuilder.Entity("_02_Messwerte.Model.MessWert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("MessWert");
                });

            modelBuilder.Entity("_02_Messwerte.Model.MessWert", b =>
                {
                    b.HasOne("_02_Messwerte.Model.MessStation", "Station")
                        .WithMany("MessWerte")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("_02_Messwerte.Model.MessStation", b =>
                {
                    b.Navigation("MessWerte");
                });
#pragma warning restore 612, 618
        }
    }
}
